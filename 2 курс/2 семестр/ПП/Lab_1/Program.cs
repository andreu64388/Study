namespace Lab_1;

class Program
{
	private static void Main()
	{

		#region EX1
		/*2 Разработайте программный 
		 * код для создания объекта этого класса, продемонстрируйте работоспособность конструкторов, методов, использования полей и 
		 * свойств.     */
		
		C1 c1 = new C1();
		c1.Name = "Ivan";
		c1.PrintInfo();
		

		C1 c2 = new C1(1, "Ivan", "Ivanov");
		c2.PrintInfo();

		C1 c3 = new C1(c2);
		c3.PrintInfo();
		#endregion

		#region EX4

		/*8.	Разработайте программный код для создания объекта этого класса С2, продемонстрируйте работоспособность конструкторов, методов, использования полей и свойств.     */

		C2 c4 = new C2();
		c4.Name = "Ivan";
		c4.PrintInfo();

		c4.PrintI();


		#endregion
		#region EX5
		/*9.	Разработайте программный код для создания объекта этого класса С4, продемонстрируйте работоспособность конструкторов, методов (собственных и наследованных), использования полей и свойств (собственных и наследованных).     */

		C4 c5 = new C4();
		c5.Name = "Ivan";
		c5.PrintInfo();

		#endregion
		


	}
}


/*10.	Перечислите основные парадигмы объектно-ориентированного программирования (ООП). 
11.	Поясните понятие ООП класс.
12.	Поясните понятие ООП интерфейс.
13.	Поясните парадигму ООП абстракция.
14.	Поясните парадигму ООП инкапсуляция.
15.	Поясните парадигму ООП наследование.
16.	Поясните парадигму ООП полиморфизм.
17.	Поясните разницу между полем и свойством класса. 
18.	Поясните принцип использования событий. 
19.	Поясните принцип использования индексаторов. 
20.	Поясните понятие UML. 
21.	Поясните UML-понятие стереотип. 
*/


//10. Парадигмы ООП:
//1. Абстракция
//2. Наследование
//3. Инкапсуляция
//4. Полиморфизм

//11. Класс - это шаблон, по которому создаются объекты. Класс определяет состояние объекта и его поведение.

//12. Интерфейс - это набор методов, которые должны быть реализованы в классе, который его реализует.

//13. Абстракция - это способность выделить из объекта его основные характеристики и свойства.

//14. Инкапсуляция - это способность скрыть детали реализации объекта от пользователя.

//15. Наследование - это способность объекта или класса наследовать свойства и методы другого объекта или класса.

//16. Полиморфизм - это способность объекта использовать методы производного класса.

//17. Поле - это переменная, которая хранит данные в объекте. Свойство - это метод, который позволяет получить или изменить значение поля.

// 18. Событие - это способ оповестить объект о том, что произошло какое-то событие

//19 Индексатор - это способ обращения к элементам массива

//20 UML - это язык, который позволяет описывать объекты и их взаимодействие

//21 Стереотип - это способ описания объекта в UML

//конструктор по умолчанию c# это


