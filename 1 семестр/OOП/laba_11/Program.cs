using System;



namespace laba_11;

class Program
{
    public static void Main()
    {


        Test test = new Test("Andrey", 19);


        Reflector.Create<Test>();

        Reflection.GetAssemblyName(typeof(Test));
        Reflection.GetConstructors(typeof(Test));
        Reflection.GetMethods(typeof(Test));
        Reflection.GetProperties(typeof(Test));
        Reflection.GetFields(typeof(Test));
        
        





    }
}

//Type - это 
//1. Что такое рефлексия?

//Рефлексия - это возможность программы получать информацию о себе самой, о своих типах, членах и атрибутах во время выполнения.

//2. Какие есть способы получения объекта типа Type. Приведите три способа получения типа.

//Способы получения объекта типа Type:

//1. Использование оператора typeof

//2. Использование метода GetType()

//3. Использование метода Type.GetType()

//3. Охарактеризуйте классы из пространства имен System.Reflection.

//System.Reflection - это пространство имен, которое содержит типы, которые позволяют изучать сборки, модули, типы, члены и атрибуты во время выполнения.

//4. Как можно использовать класс System.Type? Перечислите его свойства и методы.

//С помощью класса System.Type можно получить информацию о типе, создать экземпляр типа, получить доступ к членам типа и вызвать их.

//5. Что такое позднее и раннее связывание?

//Позднее связывание - это связывание, которое происходит во время выполнения программы.

//Раннее связывание - это связывание, которое происходит во время компиляции программы.

//6. Как динамически загрузить сборку в приложение?

//С помощью метода Assembly.LoadFrom()

/*8. Для чего предназначены BindingFlags? Какую комбинацию флагов
необходимо использовать, чтобы иметь возможность получать
приватные члены класса?*/

//BindingFlags предназначены для указания типа связывания, которое необходимо использовать при поиске членов типа.